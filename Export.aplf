 msg←Export(ns dir);opts;outFail;numFail;container;win;OsSlash;isChild
 :If ~×⎕NC'⎕SE.Link.DEBUG'
     ⎕SE.Link.DEBUG←0
 :ElseIf ⎕SE.Link.DEBUG=2
     (1+⊃⎕LC)⎕STOP⊃⎕SI
 :EndIf
 :Trap ⎕SE.Link.DEBUG↓0
     opts←⎕NS ⍬
     opts.watch←'none'
     opts.source←'ns'

     msg←⍕⍬⊤⍬
     container←⊃⌽2⍴⎕RSI↓⍨⎕XSI(∊⍨×¯1+⍳)⊂'⎕SE.UCMD'    ⍝ ns is relative to where we were called from
     ns←⍕ns
     isChild←~'⎕SE'(,'#')'⎕DMX'∊⍨⊂ns
     ns,⍨←isChild/'.',⍨⍕container
     dir↓⍨←-'/\'∊⍨⊃⌽dir
     :If ⎕NEXISTS dir
         dir←⊃⊃⎕NINFO⍠1⊢dir
     :Else
         dir←∊1 ⎕NPARTS dir ⍝ normalise name
     :EndIf

     win←'Windows'≡7↑⊃'.'⎕WG'APLVersion'
     OsSlash←'\'@{⍵='/'}⍣win
     dir←OsSlash dir

     outFail←opts WriteFiles(⍎ns)dir
     msg←'Exported: ',ns,' → ',dir
     numFail←≢outFail
     :If ×numFail
         msg,←'; ',(⍕numFail),' failed: ',1↓¯1↓1 ⎕JSON outFail
     :EndIf
 :Else
     ⎕SIGNAL⊂⎕DMX.(('EN'EN)('Message'Message))
 :EndTrap
